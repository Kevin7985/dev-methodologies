"""книгиб авторы юзеры

Revision ID: 694cee0d5cd3
Revises: 
Create Date: 2023-10-03 02:40:56.762703

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '694cee0d5cd3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('guid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('name', sa.String(), nullable=True, comment='Имя'),
    sa.Column('last_name', sa.String(), nullable=True, comment='Фамилия'),
    sa.Column('patronymic', sa.String(), nullable=True, comment='Отчество'),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_authors_guid'), 'authors', ['guid'], unique=True)
    op.create_table('books',
    sa.Column('guid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('name', sa.String(), nullable=True, comment='Название книги'),
    sa.Column('authors', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Список авторов'),
    sa.Column('status', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True, comment='Статус книги'),
    sa.Column('publication_date', sa.DateTime(), nullable=True, comment='Дата публикации'),
    sa.Column('rating', sa.Float(), nullable=True, comment='Оценка пользователей'),
    sa.Column('quantity', sa.Integer(), nullable=True, comment='Количество экземпляров'),
    sa.Column('cover', sa.String(), nullable=True, comment='Обложка книги'),
    sa.Column('isbn', sa.String(), nullable=True, comment='ISBN - книги'),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_books_guid'), 'books', ['guid'], unique=True)
    op.create_table('users',
    sa.Column('guid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('nickname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('account_status', sa.String(), nullable=False),
    sa.Column('about', sa.String(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('guid'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_guid'), 'users', ['guid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_guid'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_books_guid'), table_name='books')
    op.drop_table('books')
    op.drop_index(op.f('ix_authors_guid'), table_name='authors')
    op.drop_table('authors')
    # ### end Alembic commands ###
